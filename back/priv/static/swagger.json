{
  "swagger": "2.0",
  "paths": {
    "/team": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "List the current user team",
        "responses": {
          "422": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unprocessable Entity"
          },
          "201": {
            "description": "Ok"
          }
        },
        "parameters": [],
        "operationId": "GothamWeb.UserController.list_team",
        "description": "List the current user team"
      }
    },
    "/sign_up": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create a new user account",
        "responses": {
          "422": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unprocessable Entity"
          },
          "201": {
            "schema": {
              "$ref": "#/definitions/Users"
            },
            "description": "Ok"
          }
        },
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/Users"
            },
            "required": false,
            "name": "tracker",
            "in": "body",
            "description": "User data to record"
          }
        ],
        "operationId": "GothamWeb.UserController.sign_up",
        "description": "Create a new user account"
      }
    },
    "/sign_out": {
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Sign out the current user",
        "responses": {
          "422": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unprocessable Entity"
          },
          "201": {
            "description": "Ok"
          }
        },
        "parameters": [],
        "operationId": "GothamWeb.UserController.sign_out",
        "description": "Sign out the current user"
      }
    },
    "/sign_in": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Sign in with credentials",
        "responses": {
          "422": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unprocessable Entity"
          },
          "201": {
            "schema": {
              "$ref": "#/definitions/Users"
            },
            "description": "Ok"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "username",
            "in": "path",
            "description": "username"
          },
          {
            "type": "string",
            "required": true,
            "name": "passowrd",
            "in": "path",
            "description": "password"
          }
        ],
        "operationId": "GothamWeb.UserController.sign_in",
        "description": "Sign in with credentials"
      }
    },
    "/me": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Show current users data",
        "responses": {
          "422": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unprocessable Entity"
          },
          "201": {
            "description": "Ok"
          }
        },
        "parameters": [],
        "operationId": "GothamWeb.UserController.show",
        "description": "Show current users data"
      }
    },
    "/add": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Add a user to a manager's team",
        "responses": {
          "422": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unprocessable Entity"
          },
          "201": {
            "schema": {
              "$ref": "#/definitions/Users"
            },
            "description": "Ok"
          }
        },
        "parameters": [
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Users id"
          }
        ],
        "operationId": "GothamWeb.UserController.add_in_team",
        "description": "Add a user to a manager's team"
      }
    },
    "/:userId/:workingtimeId": {
      "get": {
        "tags": [
          "WorkingTime"
        ],
        "summary": "Show current users data",
        "responses": {
          "422": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unprocessable Entity"
          },
          "201": {
            "description": "Ok"
          }
        },
        "parameters": [],
        "operationId": "GothamWeb.WorkingTimeController.show_params",
        "description": "Show current users data"
      }
    },
    "/:userId": {
      "patch": {
        "tags": [
          "WorkingTime"
        ],
        "summary": "Update an existing users workingtime",
        "responses": {
          "422": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unprocessable Entity"
          },
          "201": {
            "schema": {
              "$ref": "#/definitions/workingtime"
            },
            "description": "Ok"
          }
        },
        "parameters": [
          {
            "type": "datetime",
            "required": false,
            "name": "start",
            "in": "path",
            "description": "Users start date"
          },
          {
            "type": "datetime",
            "required": false,
            "name": "eend",
            "in": "path",
            "description": "Users end date"
          }
        ],
        "operationId": "GothamWeb.WorkingTimeController.update",
        "description": "Update an existing users workingtime"
      },
      "get": {
        "tags": [
          "Clocks"
        ],
        "summary": "Show current users data",
        "responses": {
          "422": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unprocessable Entity"
          },
          "201": {
            "description": "Ok"
          }
        },
        "parameters": [],
        "operationId": "GothamWeb.ClocksController.show",
        "description": "Show current users data"
      },
      "delete": {
        "tags": [
          "WorkingTime"
        ],
        "summary": "Delete a users workingtime",
        "responses": {
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not found"
          },
          "204": {
            "description": "No content"
          }
        },
        "parameters": [
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "The user id"
          }
        ],
        "operationId": "GothamWeb.WorkingTimeController.remove",
        "description": "Delete a users workingtime"
      }
    },
    "/:id": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Update an existing user",
        "responses": {
          "422": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unprocessable Entity"
          },
          "201": {
            "schema": {
              "$ref": "#/definitions/Users"
            },
            "description": "Ok"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": false,
            "name": "username",
            "in": "path",
            "description": "Users name"
          },
          {
            "type": "string",
            "required": false,
            "name": "email",
            "in": "path",
            "description": "Users email"
          },
          {
            "type": "string",
            "required": false,
            "name": "firstname",
            "in": "path",
            "description": "Users firstname"
          },
          {
            "type": "string",
            "required": false,
            "name": "lastname",
            "in": "path",
            "description": "Users lastname"
          },
          {
            "type": "string",
            "required": false,
            "name": "password",
            "in": "path",
            "description": "Users password"
          }
        ],
        "operationId": "GothamWeb.UserController.update",
        "description": "Update an existing user"
      },
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Show users data by id",
        "responses": {
          "422": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unprocessable Entity"
          },
          "201": {
            "description": "Ok"
          }
        },
        "parameters": [],
        "operationId": "GothamWeb.UserController.show_by_id",
        "description": "Show users data by id"
      }
    },
    "/": {
      "post": {
        "tags": [
          "Clocks"
        ],
        "summary": "Clocks in or Clocks out",
        "responses": {
          "422": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unprocessable Entity"
          },
          "201": {
            "schema": {
              "$ref": "#/definitions/clocks"
            },
            "description": "Ok"
          }
        },
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/clocks"
            },
            "required": true,
            "name": "user",
            "in": "body",
            "description": "clocks data to record"
          }
        ],
        "operationId": "GothamWeb.ClocksController.create",
        "description": "Store the start when a user clock in, creates a workingtime when clock out"
      }
    }
  },
  "info": {
    "version": "1.0",
    "title": "Gotham"
  },
  "definitions": {
    "workingtime": {
      "type": "object",
      "title": "Workingtime",
      "required": [
        "user_id",
        "eend",
        "start"
      ],
      "properties": {
        "user_id": {
          "type": "integer",
          "description": "Users id"
        },
        "start": {
          "type": "datetime",
          "description": "Users start working"
        },
        "eend": {
          "type": "datetime",
          "description": "Users end working"
        }
      },
      "example": {
        "user_id": 42,
        "start": "2019-12-12 09:00:00",
        "end": "2019-12-12 18:00:00"
      },
      "description": "A user workingtime"
    },
    "clocks": {
      "type": "object",
      "title": "Clocks",
      "required": [
        "user_id",
        "status",
        "time"
      ],
      "properties": {
        "user_id": {
          "type": "integer",
          "description": "Users id"
        },
        "time": {
          "type": "datetime",
          "description": "Users start working"
        },
        "status": {
          "type": "status",
          "description": "Working or not status"
        }
      },
      "example": {
        "user_id": 42,
        "time": "2019-12-12 09:00:00",
        "status": "true"
      },
      "description": "A user clocks"
    },
    "Users": {
      "type": "object",
      "title": "Users",
      "required": [
        "password",
        "lastname",
        "firstname",
        "email",
        "username"
      ],
      "properties": {
        "username": {
          "type": "string",
          "description": "Users name"
        },
        "team": {
          "type": "integer",
          "description": "Ids of users, only for managers"
        },
        "role_id": {
          "type": "integer",
          "description": "Users role Id"
        },
        "password": {
          "type": "string",
          "description": "Users password"
        },
        "lastname": {
          "type": "string",
          "description": "Users lastname"
        },
        "firstname": {
          "type": "string",
          "description": "Users firstname"
        },
        "email": {
          "type": "string",
          "description": "Users email"
        }
      },
      "example": {
        "username": "test",
        "team": "[1, 2, 3]",
        "role_id": "2",
        "password": "2uto3ihg]1081+_92752'",
        "lastname": "doe",
        "firstname": "john",
        "email": "test@123.com"
      },
      "description": "A user of the application"
    },
    "Error": {
      "type": "object",
      "title": "Errors",
      "required": [
        "error"
      ],
      "properties": {
        "error": {
          "type": "string",
          "description": "The message of the error raised"
        }
      },
      "description": "Error responses from the API"
    }
  }
}